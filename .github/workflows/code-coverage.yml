name: Coverage

on:
  push:
  pull_request:
  
jobs:
  generate-report:
    
    runs-on: ubuntu-latest
    if: ${{ ! contains(github.event.head_commit.message, 'skip@codecov') && ! contains(github.event.head_commit.message, 'skip@all') }}
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore Packages
      run: dotnet restore
    - name: Add Coverlet.MSBuild package for testing
      run: dotnet add ./Settings.Net.Tests/Settings.Net.Tests.csproj package coverlet.msbuild
    - name: Run tests
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=Code-Cov.xml
    - name: Download report upload script
      run: curl -s https://codecov.io/bash > codecov
    - name: Add execution permission
      run: chmod +x codecov
    - name: Upload report
      run: ./codecov -f './Settings.Net.Tests/Code-Cov.xml'
    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v2
      with:
        name: CoverageReport
        path: ./Settings.Net.Tests/Code-Cov.xml
        if-no-files-found: error
  
  
  deploy:
  
    runs-on: ubuntu-latest
    needs: generate-report
    # Prevents running from pull requests.
    if: ${{ github.ref == 'refs/heads/master' }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: Download report
      uses: actions/download-artifact@v2
      with:
        name: CoverageReport
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Generate html reports
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.5
      with:
        reports: 'Code-Cov.xml'
        targetdir: 'CodeCoverageReport'
        reporttypes: 'Html'
    - name: Deploy to gh-pages
      uses: JamesIves/github-pages-deploy-action@4.0.0
      with:
        branch: gh-pages
        folder: CodeCoverageReport
